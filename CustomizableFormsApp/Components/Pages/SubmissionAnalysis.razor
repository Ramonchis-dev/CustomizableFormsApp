@page "/templates/{TemplateId:guid}/analysis"
@inject FormSubmissionService SubmissionService

@if (submissions == null)
{
    <p>Loading...</p>
}
else
{
    <h2>Submissions Analysis</h2>

    @foreach (var question in template.Questions)
    {
        <div class="card mb-4">
            <div class="card-header">@question.Text</div>
            <div class="card-body">
                @if (question.Type == QuestionType.Number)
                {
                    <h5>Summary Statistics</h5>
                    <p>Average: @CalculateAverage(question.Id)</p>
                }
                else if (question.Type == QuestionType.Dropdown)
                {
                    <h5>Response Distribution</h5>
                    <ul>
                        @foreach (var option in question.Options)
                        {
                            <li>@option.Text: @CountResponses(question.Id, option.Value)</li>
                        }
                    </ul>
                }
            </div>
        </div>
    }
}

@code {
    [Parameter] public Guid TemplateId { get; set; }

    private Template? template;
    private List<FormSubmission> submissions = new();

    protected override async Task OnParametersSetAsync()
    {
        submissions = await SubmissionService.GetSubmissionsAsync(TemplateId);
        template = // Load template from service
    }

    private double CalculateAverage(Guid questionId)
    {
        var values = submissions.Select(s =>
            JsonSerializer.Deserialize<Dictionary<Guid, Answer>>(s.AnswersJson))
            .Where(a => a.ContainsKey(questionId))
            .Select(a => a[questionId].NumberValue)
            .Where(n => n.HasValue)
            .Select(n => n.Value);

        return values.Any() ? values.Average() : 0;
    }

    private int CountResponses(Guid questionId, string optionValue)
    {
        return submissions.Count(s =>
            JsonSerializer.Deserialize<Dictionary<Guid, Answer>>(s.AnswersJson))
            .TryGetValue(questionId, out var answer) &&
            answer?.SelectedOption == optionValue);
    }
}