@page "/account/register"
@using CustomizableFormsApp.Components.Layout
@layout MainLayout
@rendermode RenderMode.InteractiveServer

<PageTitle>Register</PageTitle>

<div class="row justify-content-center">
    <div class="col-md-6">
        <div class="card">
            <div class="card-header">
                <h3>Create a New Account</h3>
            </div>
            <div class="card-body">
                <EditForm Model="@registerModel" OnValidSubmit="HandleRegister">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <div class="mb-3">
                        <label class="form-label">Email</label>
                        <InputText @bind-Value="registerModel.Email" class="form-control" />
                        <ValidationMessage For="@(() => registerModel.Email)" />
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Password</label>
                        <InputText type="password" @bind-Value="registerModel.Password" class="form-control" />
                        <ValidationMessage For="@(() => registerModel.Password)" />
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Confirm Password</label>
                        <InputText type="password" @bind-Value="registerModel.ConfirmPassword" class="form-control" />
                        <ValidationMessage For="@(() => registerModel.ConfirmPassword)" />
                    </div>

                    <button type="submit" class="btn btn-primary w-100">Register</button>
                </EditForm>

                <div class="mt-3 text-center">
                    Already have an account? <a href="/login">Login here</a>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private RegisterModel registerModel = new();
    private string errorMessage;

    private async Task HandleRegister()
    {
        errorMessage = null;
        // Registration logic would go here
        // await AuthService.Register(registerModel);
    }
    }

    public class RegisterModel
    {
        [Required]
        [EmailAddress]
        public string Email { get; set; }

        [Required]
        [StringLength(100, MinimumLength = 6)]
        public string Password { get; set; }

        [Required]
        [Compare(nameof(Password), ErrorMessage = "Passwords do not match")]
        public string ConfirmPassword { get; set; }
    }
}